
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Инициализировать();
	ЗагрузитьТаблицуСПланомТО();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандРеквизитовФормы

&НаКлиенте
Процедура Подключаемый_ИзменитьСтатусТО(Элемент) Экспорт
	
	НомерСтроки = НомерСтрокиИзИмениЭлемента(ИмяЭлементаБезНомераСтроки(Элемент.Имя));
	
	ТекСтрока = Объект.ВыполненныеРаботы[НомерСтроки - 1];
	
	Если ЭтотОбъект[Элемент.Имя] Тогда
		ТекСтрока[УзнатьВидТОПоИмениЭлемента(Элемент.Имя) + "Статус"] =
			ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.Пройдено"); 
			
		ТекСтрока[УзнатьВидТОПоИмениЭлемента(Элемент.Имя) + "ПоФакту"] = Объект.Дата;
	Иначе
		ТекСтрока[УзнатьВидТОПоИмениЭлемента(Элемент.Имя) + "Статус"] = 
			ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.НеПройдено");
			
		ТекСтрока[УзнатьВидТОПоИмениЭлемента(Элемент.Имя) + "ПоФакту"] = Неопределено;
	КонецЕсли;
	
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонТО);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильПриИзменении(Элемент)
	ТекущийНомерТО = ТекущийНомерТО(Объект.Автомобиль, Объект.Дата);
	ЗагрузитьТаблицуСПланомТО();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ТекущийНомерТО = ТекущийНомерТО(Объект.Автомобиль, Объект.Дата);
	ЗагрузитьТаблицуСПланомТО();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТЧРаботы

//Вызывается при первоначальном заполнении
&НаСервере
Процедура Инициализировать()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Не ЗначениеЗаполнено(Объект.Автомобиль) Тогда
			Объект.Автомобиль = Справочники.Автомобили.АвтомобильПоУмолчанию();
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
			Объект.Дата = ТекущаяДата();
		КонецЕсли;
	КонецЕсли;
	
	ДиапазонТО = ИмяТекущееТО();
	ТекущийНомерТО = ТекущийНомерТО(Объект.Автомобиль, Объект.Дата);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыПланаТО()
	
	Элементы.ГруппаРаботы.Видимость = (Объект.ВыполненныеРаботы.Количество() > 0);
	
	Счетчик = 1;
	Для каждого СтрокаПлана Из Объект.ВыполненныеРаботы Цикл
		ДобавитьСтрокуПланаТОНаФорму(СтрокаПлана, Счетчик);
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РаботаОбработкаВыбора(Элемент, ВыбранноеЗначение) 
	
	//НомерХарактеристики = Элемент.Родитель.Родитель.ПодчиненныеЭлементы.Индекс(Элемент.Родитель) + 1;
	//
	//ИмяРеквизита = ФормыПроектыКлиентСервер.ИмяКолонкиЗначенияХарактеристики()+ НомерХарактеристики;
	//
	//КонвертированноеЧило = ПересчитатьЕдиницуИзмеренияНаСервере(
	//	ЭтотОбъект[Элемент.Имя], 
	//	ВыбранноеЗначение, 
	//	ЭтотОбъект[ИмяРеквизита]
	//);
	//
	//ЭтотОбъект[ИмяРеквизита] = КонвертированноеЧило;
	//
	//УстановитьТипХарактеристикиПоСсылке(ИмяРеквизита, ВыбранноеЗначение);
	//
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуПланаТОНаФорму(СтрокаТаблицы, Счетчик)
	
	
	// Номера ТО по регламентной работе
	ВидыТО = ПолучитьВидыТО();
	
	СчетчикВидаТО = 1;
	Для каждого ВидТО ИЗ ВидыТО Цикл
	
		РодительСтроки = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыСтрокиТаблицы() + Строка(Счетчик) + Строка(СчетчикВидаТО), Элементы.ГруппаРаботы);
		РодительСтроки.Видимость   = Ложь;
		РодительСтроки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		
		РодительРаботы = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыРодительРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), РодительСтроки);
		
		// Добавляем Реквизиты для Ссылки на Регламентную работу
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, ВидТО + ИмяРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), СтрокаТаблицы.РегламентнаяРабота,
			РодительРаботы
		);
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементРеквизита.РедактированиеТекста = Ложь;
		ЭлементРеквизита.УстановитьДействие("ОбработкаВыбора", "Подключаемый_РаботаОбработкаВыбора");
		
		// Флажок выполненного этапа
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, ВидТО + ИмяВыполненннойРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), 
			СтрокаТаблицы[ВидТО + "Статус"] = Перечисления.СтатусыВыполненияТО.Пройдено,
			РодительРаботы
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлементРеквизита.ШиринаЭлемента = 10;
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
		
		РодительРаботы = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыРодительРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), РодительСтроки);
			
		ЭлементРеквизита.УстановитьДействие("ПриИзменении", "Подключаемый_ИзменитьСтатусТО");
	
		// Группа номера ТО
		РодительВидТО = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыВидаТО() + Строка(Счетчик) + Строка(СчетчикВидаТО), РодительСтроки);
		РодительВидТО.Видимость   = Истина;
		РодительВидТО.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		// План ТО
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, 
			ВидТО + "ПоПлану" + Строка(Счетчик) + СчетчикВидаТО, 
			СтрокаТаблицы[ВидТО + "ПоПлану"],
			РодительВидТО,
			Тип("Дата")
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеНадписи;
		ЭлементРеквизита.Формат = "Л=en; ДЛФ=D; ДП='-'";
		ЭлементРеквизита.ТолькоПросмотр = Истина;
		ЭлементРеквизита.Заголовок = НСтр("ru = 'По плану'; en = 'Plan'");
		ЭлементРеквизита.Ширина = 6;
		// TODO: не работает на Android API 27
		//ЭлементРеквизита.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
		
		// Passed / Not Passed
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, 
			ВидТО + "ДекорацияPassed" + Строка(Счетчик) + СчетчикВидаТО, 
			ЗначениеЗаполнено(СтрокаТаблицы[ВидТО + "ПоФакту"]),
			РодительВидТО,
			Тип("Булево")
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеНадписи;
		ЭлементРеквизита.Формат = "БЛ='NOT PASSED'; БИ=PASSED";
		ЭлементРеквизита.Гиперссылка = Истина;
		ЭлементРеквизита.ТолькоПросмотр = Истина;
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.РастягиватьПоГоризонтали = Ложь;
		ЭлементРеквизита.Ширина = 9;
		ЭлементРеквизита.ЦветТекста = Новый Цвет(34, 139, 34);
		ЭлементРеквизита.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
		ЭлементРеквизита.УстановитьДействие("Нажатие", "Подключаемый_ДекорацияPassedНажатие");
		
		// Факт ТО
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, 
			ВидТО + "ПоФакту" + Строка(Счетчик) + СчетчикВидаТО, 
			СтрокаТаблицы[ВидТО + "ПоФакту"],
			РодительВидТО,
			Тип("Дата")
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеНадписи;
		ЭлементРеквизита.Формат = "Л=en; ДЛФ=D; ДП='enter date'";
		ЭлементРеквизита.Гиперссылка = Истина;
		ЭлементРеквизита.ТолькоПросмотр = Истина;
		ЭлементРеквизита.ЦветТекста = Новый Цвет(28, 115, 205);
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.Видимость = Истина;
		
		// Сделано для выравнивания заголовков дробных ТО и целых
		Если СтрокаТаблицы[ВидТО + "Номер"] = Цел(СтрокаТаблицы[ВидТО + "Номер"]) Тогда
			ЭлементРеквизита.Заголовок = СтрШаблон(НСтр("ru = 'Факт №%1   '; en = 'Actual №%1 '"), СтрокаТаблицы[ВидТО + "Номер"]);
		Иначе
			ЭлементРеквизита.Заголовок = СтрШаблон(НСтр("ru = 'Факт №%1'; en = 'Actual №%1'"), СтрокаТаблицы[ВидТО + "Номер"]);
		КонецЕсли;
		ЭлементРеквизита.УстановитьДействие("Нажатие", "Подключаемый_СсылкаНаДатуТОНажатие");
		
		СчетчикВидаТО = СчетчикВидаТО + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСтрокиПланФакта(ПланДата, ФактДата)
	
	СтрокаПлана = Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'П:%1'; en = 'P:%1'"), Формат(ПланДата, "Л=ru_RU; ДФ=dd.MM.yy; ДП=--------------")),
		, Новый Цвет(0, 0, 150));
		
	Разделитель = Новый ФорматированнаяСтрока(" / ");
		
	СтрокаФакта = Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'Ф:%1'; en = 'F:%1'"), Формат(ФактДата, "Л=ru_RU; ДФ=dd.MM.yy; ДП=--------------")),
		, Новый Цвет(0, 150, 0));
	
	Возврат Новый ФорматированнаяСтрока(СтрокаПлана, Разделитель, СтрокаФакта);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяГруппыСтрокиТаблицы()
	
	Возврат "ГруппаСтрокаТаб";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяГруппыРодительРаботы()
	
	Возврат "ГруппаРаботаСтрока";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяРаботы()
	
	Возврат "Работа";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяВыполненннойРаботы()
	
	Возврат "РаботаВыполнена";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяГруппыВидаТО()
	
	Возврат "ГруппаВидТО";
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяПрошлогоТО()
	
	Возврат Документы.РегистрацииТО.ИмяПрошлогоТО();
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяТекущееТО()
	
	Возврат Документы.РегистрацииТО.ИмяТекущееТО();
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяСледующееТО()
	
	Возврат Документы.РегистрацииТО.ИмяСледующееТО();
	
КонецФункции

&НаСервере
Процедура ЗагрузитьТаблицуСПланомТО()
	
	Если Не ЗначениеЗаполнено(Объект.Автомобиль) Или Не ЗначениеЗаполнено(Объект.Дата) Тогда
		Объект.ВыполненныеРаботы.Очистить();
	Иначе
		Объект.ВыполненныеРаботы.Загрузить(ТаблицаПланТО(Объект.Автомобиль, Объект.Дата));
	КонецЕсли;
	
	// Требуется соблюдение порядка вызовов
	ОбновитьТумблерДиапазонаТО();
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонТО);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СсылкаНаДатуТОНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ЗавершитьВводДатыТО", ЭтотОбъект, 
		Новый Структура("ИмяЭлемента", Элемент.Имя));
		
	РеквизитДаты = ДатаТОПоИмениЭлемента(Элемент.Имя);
	РеквизитДатыПлан = ДатаТОПоИмениЭлемента(СтрЗаменить(Элемент.Имя, "ПоФакту", "ПоПлану"));
	
	ПоказатьВводДаты(Оповещение, ?(ЗначениеЗаполнено(РеквизитДаты), РеквизитДаты, Макс(Объект.Дата, РеквизитДатыПлан)),
		НСтр("ru = 'Введите дату прохождения ТО'; en = 'Enter actual service date'"), ЧастиДаты.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДекорацияPassedНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НомерСтроки = НомерСтрокиИзИмениЭлемента(ИмяЭлементаБезНомераСтроки(Элемент.Имя));
	СтрокаТЧ = Объект.ВыполненныеРаботы[НомерСтроки - 1];
	
	ПоказатьПредупреждение(, Формат(СтрокаТЧ[УзнатьВидТОПоИмениЭлемента(Элемент.Имя) + "ПоФакту"], "ДФ=dd.MM.yyyy"));
	
КонецПроцедуры


&НаКлиенте
Процедура ЗавершитьВводДатыТО(Дата, ДополнительныеПараметры) Экспорт
	
	Если Дата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТЧ = СтрокаТЧВыполненныеРаботыПоИмениЭлемента(ИмяЭлементаБезНомераСтроки(ДополнительныеПараметры.ИмяЭлемента));
	СтрокаТЧ[ИмяЭлементаБезНомераСтроки(ИмяЭлементаБезНомераСтроки(ДополнительныеПараметры.ИмяЭлемента))] = Дата;
	
	СтрокаТЧ[УзнатьВидТОПоИмениЭлемента(ДополнительныеПараметры.ИмяЭлемента) + "Статус"] =
		ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.Пройдено");
	
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонТО);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТумблераТО

&НаСервере
Процедура ОбновитьТумблерДиапазонаТО()
	
	НомераТО = Новый Массив;
	ВидыТО = ПолучитьВидыТО();
	
	Элементы.ДиапазонТО.СписокВыбора.Очистить();

	Для каждого ВидТО Из ВидыТО Цикл
		ЭлСписка = Элементы.ДиапазонТО.СписокВыбора.Добавить(ВидТО, Строка(ВидТО));
		Если ВидТО = ИмяПрошлогоТО() Тогда
			ЭлСписка.Представление = СтрШаблон("№%1 %2", ТекущийНомерТО - 1, Формат(НачалоГода(Объект.Дата) - 1, "ДФ=yyyy"));
		ИначеЕсли ВидТО = ИмяТекущееТО() Тогда
			ЭлСписка.Представление = СтрШаблон("№%1 %2", ТекущийНомерТО, Формат(Объект.Дата, "ДФ=yyyy"));
		ИначеЕсли ВидТО = ИмяСледующееТО() Тогда
			ЭлСписка.Представление = СтрШаблон("№%1 %2", ТекущийНомерТО + 1, Формат(КонецГода(Объект.Дата) + 1, "ДФ=yyyy"));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДиапазонТОПриИзменении(Элемент)
	
	ОтфильтроватьРегламентныеРаботы(ДиапазонТО);
	
КонецПроцедуры

&НаСервере
Процедура ОтфильтроватьРегламентныеРаботы(знач ВидТОТекущий)
	
	ВидыТО = ПолучитьВидыТО();
	
	Для Счетчик1 = 1 По Объект.ВыполненныеРаботы.Количество() Цикл
		Для Счетчик2 = 1 По ВидыТО.Количество() Цикл
			ЭтотОбъект.Элементы[ВидыТО[Счетчик2 - 1] + ИмяГруппыСтрокиТаблицы() + Строка(Счетчик1) + Строка(Счетчик2)].Видимость = Ложь;
		КонецЦикла;
	КонецЦикла;
	
	Счетчик1 = 1;
	Для каждого СтрокаРеглРаботы Из Объект.ВыполненныеРаботы Цикл
		Счетчик2 = 1;
		Для каждого ВидТО Из ВидыТО Цикл
			ГруппаСтрокиТаблицы = ЭтотОбъект.Элементы[ВидТО + ИмяГруппыСтрокиТаблицы() + Строка(Счетчик1) + Строка(Счетчик2)];
			Если СтрокаРеглРаботы[ВидТО + "Номер"] > 0 И СтрНачинаетсяС(ГруппаСтрокиТаблицы.Имя, ВидТОТекущий)
				И ТОВходитВИнтервал(ВидТО, СтрокаРеглРаботы[ВидТО + "ПоПлану"]) Тогда
				ГруппаСтрокиТаблицы.Видимость = Истина;
			КонецЕсли;
			Счетчик2 = Счетчик2 + 1;
		КонецЦикла;
		Счетчик1 = Счетчик1 + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТОВходитВИнтервал(ВидТО, ДатаТО)
	
	Если ВидТО = ИмяТекущееТО() Тогда
		Возврат ДатаТО >= НачалоГода(Объект.Дата) И ДатаТО <= КонецГода(Объект.Дата);
	ИначеЕсли ВидТО = ИмяСледующееТО() Тогда
		НачалоСледующийГод = КонецГода(Объект.Дата) + 1;
		Возврат ДатаТО >= НачалоСледующийГод И ДатаТО <= КонецГода(НачалоСледующийГод);
	ИначеЕсли ВидТО = ИмяПрошлогоТО() Тогда
		КонецПрошлыйГод = НачалоГода(Объект.Дата) - 1;
		Возврат ДатаТО >= НачалоГода(КонецПрошлыйГод) И ДатаТО <= КонецПрошлыйГод;
	КонецЕсли;
	
	ВызватьИсключение "Not implemented";
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	//TODO: УСЛОВНОЕ ОФОРМДЕНИЕ НЕ РАБОТАЕТ ПО НЕПОНЯТНЫМ ПРИЧИНАМ
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Счетчик1 = 1;
	Для каждого СтрокаРегРаботы Из Объект.ВыполненныеРаботы Цикл
		Счетчик2 = 1;
		Для каждого ВидТО Из ПолучитьВидыТО() Цикл
	
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы[ВидТО + ИмяВыполненннойРаботы() + Строка(Счетчик1) + Строка(Счетчик2)].Имя);

			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ВыполненныеРаботы." + ВидТО  + "Статус");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
			ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыВыполненияТО.Пройдено;
			
			Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);
			
			Счетчик2 = Счетчик2 + 1;

		КонецЦикла;
		Счетчик1 = Счетчик1 + 1;
	КонецЦикла;
	//
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекущийНомерТО(знач Автомобиль, знач ДатаАнализа)
	
	Если Не ЗначениеЗаполнено(Автомобиль) Или Не ЗначениеЗаполнено(ДатаАнализа) Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ВлЗапрос.ТекущийНомерТО КАК ЧИСЛО(13, 0))) = ВлЗапрос.ТекущийНомерТО
	|			ТОГДА ВлЗапрос.ТекущийНомерТО
	|		ИНАЧЕ ВЫРАЗИТЬ(ВлЗапрос.ТекущийНомерТО - 0.5 КАК ЧИСЛО(13, 0))
	|	КОНЕЦ КАК ТекущийНомерТО
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫРАЗИТЬ(РАЗНОСТЬДАТ(&ДатаПриобретения, &ДатаАнализа, МЕСЯЦ) / 12 КАК ЧИСЛО(10, 3)) КАК ТекущийНомерТО) КАК ВлЗапрос");
	Запрос.УстановитьПараметр("ДатаПриобретения", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Автомобиль, "ДатаПриобретения"));
	Запрос.УстановитьПараметр("ДатаАнализа", ДатаАнализа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ТекущийНомерТО;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТаблицаПланТО(знач Автомобиль, знач ДатаАнализа)
	
	Возврат Документы.РегистрацииТО.ТаблицаПланТО(ДатаАнализа, Автомобиль);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяЭлементаБезНомераСтроки(ИмяЭлемента)
	Проверки.СвойствоЗаполнено(ИмяЭлемента);
	Возврат Лев(ИмяЭлемента, СтрДлина(ИмяЭлемента) - 1);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НомерСтрокиИзИмениЭлемента(ИмяЭлемента)
	Проверки.СвойствоЗаполнено(ИмяЭлемента);
	Возврат Число(Прав(ИмяЭлемента, 1));
КонецФункции

&НаКлиенте
Функция СтрокаТЧВыполненныеРаботыПоИмениЭлемента(ИмЭлемента)
	Возврат Объект.ВыполненныеРаботы[НомерСтрокиИзИмениЭлемента(ИмЭлемента) - 1];
КонецФункции

&НаКлиенте
Функция ДатаТОПоИмениЭлемента(ИмяЭлемента)
	СтрокаТаблицы = СтрокаТЧВыполненныеРаботыПоИмениЭлемента(ИмяЭлементаБезНомераСтроки(ИмяЭлемента));
	РеквизитТЧ = СтрокаТаблицы[ИмяЭлементаБезНомераСтроки(ИмяЭлементаБезНомераСтроки(ИмяЭлемента))];
	Возврат РеквизитТЧ;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция УзнатьВидТОПоИмениЭлемента(ИмяЭлемента)
	
	ВидыТО = ПолучитьВидыТО();
	
	Для каждого ВидТО Из ВидыТО Цикл
		Если СтрНачинаетсяС(ИмяЭлемента, ВидТО) Тогда
			Возврат ВидТО;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидыТО()
	
	Возврат Документы.РегистрацииТО.ПолучитьВидыТО();
	
КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗагрузитьТаблицуСПланомТО();
КонецПроцедуры

#КонецОбласти