
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Инициализировать();
	ЗагрузитьТаблицуСПланомТО();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФотоФормыСервер.ПриЗаписиНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандРеквизитовФормы

&НаКлиенте
Процедура Подключаемый_ИзменитьСтатусТО(Элемент) Экспорт
	
	ИзменитьСтатусТО(ЭтотОбъект[Элемент.Имя], Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильПриИзменении(Элемент)
	АвтомобильПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРаботу(Команда)
	Оповещение = Новый ОписаниеОповещения("ЗавершитьДобавлениеРаботы", ЭтотОбъект);
	ОткрытьФорму("Справочник.РегламентныеРаботы.ФормаВыбора",, ЭтотОбъект.Элементы.ДобавитьРаботу,,,, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРаботу(Команда)
	Оповещение = Новый ОписаниеОповещения("ЗавершитьУдалениеРаботы", ЭтотОбъект);
	СписокРабот = Новый СписокЗначений;
	Для каждого СтрРаботы Из Объект.ВыполненныеРаботы Цикл
		СписокРабот.Добавить(СтрРаботы.РегламентнаяРабота);
	КонецЦикла;
	ПоказатьВыборИзМеню(Оповещение, СписокРабот, Элементы.УдалитьРаботу);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДату(Команда)
	ФормыОбщиеДействияКлиент.НачатьВводДаты(ЭтотОбъект, 
		Элементы.Дата, 
		Объект.Дата,
		Новый ОписаниеОповещения("ЗавершитьИзменениеДаты", ЭтотОбъект, Новый Структура("ИмяЭлемента", Элементы.Дата.Имя)));
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьИзменениеДаты(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Объект.ВыполненныеРаботы.Очистить();
	Объект.ТекущийНомерТО = ТекущийНомерТО(Объект.Автомобиль, Объект.Дата, Объект.Пробег);
	ЗагрузитьТаблицуСПланомТО();
КонецПроцедуры

&НаКлиенте
Процедура ПробегПриИзменении(Элемент)
	Если ИзмерительТОАвто(Объект.Автомобиль) = ИзмерительТОПробег() Тогда
		Объект.ТекущийНомерТО = ТекущийНомерТО(Объект.Автомобиль, Объект.Дата, Объект.Пробег);
		ЗагрузитьТаблицуСПланомТО();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТЧРаботы

//Вызывается при первоначальном заполнении
&НаСервере
Процедура Инициализировать()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Не ЗначениеЗаполнено(Объект.Автомобиль) Тогда
			Объект.Автомобиль = Справочники.Автомобили.АвтомобильПоУмолчанию();
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
			Объект.Дата = ТекущаяДата();
		КонецЕсли;
	КонецЕсли;
	
	ДиапазонВР = ИмяТекущееВР();
	Объект.ТекущийНомерТО = ТекущийНомерТО(Объект.Автомобиль, Объект.Дата, Объект.Пробег);
	
	ФормыСервисныеРаботыСервер.ЗаполнитьПробегЕслиНовыйДокумент(ЭтотОбъект);
	
	Элементы.Пробег.Формат = "ЧРГ=' '";
	Элементы.Пробег.ФорматРедактирования = "ЧРГ=' '";
	
	ФормыОбщиеДействияКлиентСервер.ФорматДатыДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыПланаТО()
	
	Элементы.ГруппаРаботы.Видимость = (Объект.ВыполненныеРаботы.Количество() > 0);
	
	Счетчик = 1;
	Для каждого СтрокаПлана Из Объект.ВыполненныеРаботы Цикл
		ДобавитьСтрокуПланаТОНаФорму(СтрокаПлана, Счетчик);
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	ФормыСервисныеРаботыСервер.ОбновитьЭлементыСуммы(ЭтотОбъект, ПолучитьВидыВР());
	ФормыСервисныеРаботыКлиентСервер.ПересчитатьСумму(ЭтотОбъект, ПолучитьВидыВР());
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РаботаПриИзменении(Элемент, СтандартнаяОбработка) 
	
	СтрокаТЧ = ФормыСервисныеРаботыКлиентСервер.СтрокаТЧВыполненныеРаботыПоИмениЭлемента(ЭтотОбъект, ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераКолонки(Элемент.Имя));
	СтрокаТЧ.РегламентнаяРабота = ЭтотОбъект[Элемент.Имя];

КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуПланаТОНаФорму(СтрокаТаблицы, Счетчик)
	
	// Номера ТО по регламентной работе
	ВидыТО = ПолучитьВидыВР();
	
	СчетчикВидаТО = 1;
	Для каждого ВидТО ИЗ ВидыТО Цикл
	
		РодительСтроки = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыСтрокиТаблицы() + Строка(Счетчик) + Строка(СчетчикВидаТО), Элементы.ГруппаРаботы);
		РодительСтроки.Видимость   = Ложь;
		РодительСтроки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		РодительСтроки.ТолькоПросмотр = ВидТО <> ИмяТекущееВР();
		
		РодительРаботы = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыРодительРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), РодительСтроки);
		
		// Добавляем Реквизиты для Ссылки на Регламентную работу
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, ВидТО + ИмяРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), СтрокаТаблицы.РегламентнаяРабота,
			РодительРаботы
		);
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементРеквизита.РедактированиеТекста = Ложь;
		ЭлементРеквизита.УстановитьДействие("ПриИзменении", "Подключаемый_РаботаПриИзменении");
		ЭлементРеквизита.ТолькоПросмотр = ВидТО <> ИмяТекущееВР();
		
		// Флажок выполненного этапа
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, ВидТО + ИмяВыполненннойРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), 
			СтрокаТаблицы[ВидТО + "Статус"] = Перечисления.СтатусыВыполненияТО.Пройдено,
			РодительРаботы
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлементРеквизита.ШиринаЭлемента = 10;
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
		
		РодительРаботы = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыРодительРаботы() + Строка(Счетчик) + Строка(СчетчикВидаТО), РодительСтроки);
			
		ЭлементРеквизита.УстановитьДействие("ПриИзменении", "Подключаемый_ИзменитьСтатусТО");
	
		// Группа номера ТО
		РодительВидТО = ФормыОбщиеДействияСервер.НайтиДобавитьГруппуФормы(
			ЭтотОбъект, ВидТО + ИмяГруппыВидаТО() + Строка(Счетчик) + Строка(СчетчикВидаТО), РодительСтроки);
		РодительВидТО.Видимость   = Истина;
		РодительВидТО.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		// Период ВР
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, 
			ВидТО + "Период" + Строка(Счетчик) + СчетчикВидаТО, 
			СтрокаТаблицы[ВидТО + "Период"],
			РодительВидТО,
			Тип("Дата")
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеНадписи;
		ЭлементРеквизита.Формат = "Л=en; ДФ=dd.MM.yyyy; ДЛФ=D; ДП='-'";
		ЭлементРеквизита.ТолькоПросмотр = Истина;
		ЭлементРеквизита.Заголовок = НСтр("ru = 'Дата'; en = 'Date'");
		ЭлементРеквизита.Ширина = 8;
		ЭлементРеквизита.Гиперссылка = Истина;
		ЭлементРеквизита.ТолькоПросмотр = Истина;
		ЭлементРеквизита.ЦветТекста = Новый Цвет(28, 115, 205);
		Если  ВидТО = ИмяТекущееВР() Тогда
			ЭлементРеквизита.УстановитьДействие("Нажатие", "Подключаемый_СсылкаНаДатуТОНажатие");
		КонецЕсли;

		// TODO: не работает на Android API 27
		//ЭлементРеквизита.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
		
		// Passed / Not Passed
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, 
			ВидТО + "ДекорацияPassed" + Строка(Счетчик) + СчетчикВидаТО, 
			СтрокаТаблицы[ВидТО + "Статус"] = Перечисления.СтатусыВыполненияТО.Пройдено,
			РодительВидТО,
			Тип("Булево")
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеНадписи;
		ЭлементРеквизита.Формат = "БЛ='NOPASS'; БИ=PASSED";
		ЭлементРеквизита.Гиперссылка = Истина;
		ЭлементРеквизита.ТолькоПросмотр = Истина;
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.РастягиватьПоГоризонтали = Ложь;
		ЭлементРеквизита.Ширина = 6;
		ЭлементРеквизита.ЦветТекста = Новый Цвет(34, 139, 34);
		ЭлементРеквизита.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
		Если  ВидТО = ИмяТекущееВР() Тогда
			ЭлементРеквизита.УстановитьДействие("Нажатие", "Подключаемый_ДекорацияPassedНажатие");
		КонецЕсли;
		
		// Сумма ВР
		ЭлементРеквизита = ФормыОбщиеДействияСервер.ДобавитьРеквизитСоСвязаннымЭлементомНаФорму(
			ЭтотОбъект, 
			ВидТО + "Сумма" + Строка(Счетчик) + СчетчикВидаТО, 
			СтрокаТаблицы[ВидТО + "Сумма"],
			РодительВидТО,
			ОбщегоНазначения.ОписаниеТипаЧисло(6,, ДопустимыйЗнак.Неотрицательный)
		);
		ЭлементРеквизита.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементРеквизита.Заголовок = НСтр("ru = 'руб'; en = 'rub'");
		ЭлементРеквизита.Ширина = 7;
		ЭлементРеквизита.Формат = "ЧЦ=6; ЧРГ=' '; ЧГ=3,0; ЧФ='Ч rub'";
		ЭлементРеквизита.ФорматРедактирования = "ЧЦ=6; ЧРГ=' '; ЧГ=3,0; ЧФ='Ч rub'";
		ЭлементРеквизита.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементРеквизита.УстановитьДействие("ПриИзменении", "Подключаемый_СуммаВРПриИзменении");
		РодительСтроки.ТолькоПросмотр = ВидТО <> ИмяТекущееВР();
		
		СчетчикВидаТО = СчетчикВидаТО + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСтрокиПланФакта(ПланДата, ФактДата)
	
	СтрокаПлана = Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'П:%1'; en = 'P:%1'"), Формат(ПланДата, "Л=ru_RU; ДФ=dd.MM.yy; ДП=--------------")),
		, Новый Цвет(0, 0, 150));
		
	Разделитель = Новый ФорматированнаяСтрока(" / ");
		
	СтрокаФакта = Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'Ф:%1'; en = 'F:%1'"), Формат(ФактДата, "Л=ru_RU; ДФ=dd.MM.yy; ДП=--------------")),
		, Новый Цвет(0, 150, 0));
	
	Возврат Новый ФорматированнаяСтрока(СтрокаПлана, Разделитель, СтрокаФакта);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяГруппыСтрокиТаблицы()
	
	Возврат "ГруппаСтрокаТаб";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяГруппыРодительРаботы()
	
	Возврат "ГруппаРаботаСтрока";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяРаботы()
	
	Возврат "РегламентнаяРабота";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяВыполненннойРаботы()
	
	Возврат "РаботаВыполнена";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяГруппыВидаТО()
	
	Возврат "ГруппаВидТО";
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяПрошлогоВР()
	
	Возврат Документы.ВнеплановыеРаботы.ИмяПрошлогоВР();
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяТекущееВР()
	
	Возврат Документы.ВнеплановыеРаботы.ИмяТекущееВР();
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяСледующееВР()
	
	Возврат Документы.ВнеплановыеРаботы.ИмяСледующееВР();
	
КонецФункции

&НаСервере
Процедура ЗагрузитьТаблицуСПланомТО()
	
	// Требуется соблюдение порядка вызовов
	ОбновитьТумблерДиапазонаТО();
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонВР);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СсылкаНаДатуТОНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ЗавершитьВводДатыТО", ЭтотОбъект, 
		Новый Структура("ИмяЭлемента", Элемент.Имя));
		
	РеквизитДаты = ДатаТОПоИмениЭлемента(Элемент.Имя);
	РеквизитДатыПлан = ДатаТОПоИмениЭлемента(Элемент.Имя);
	
	ФормыОбщиеДействияКлиент.НачатьВводДаты(ЭтотОбъект, 
		Элемент, ?(ЗначениеЗаполнено(РеквизитДаты), РеквизитДаты, Макс(Объект.Дата, РеквизитДатыПлан)),
		Новый ОписаниеОповещения("ЗавершитьВводДатыТО", ЭтотОбъект, Новый Структура("ИмяЭлемента", Элемент.Имя)));
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СуммаВРПриИзменении(Элемент, СтандартнаяОбработка)
	
	СтрокаТЧ = ФормыСервисныеРаботыКлиентСервер.СтрокаТЧВыполненныеРаботыПоИмениЭлемента(ЭтотОбъект, ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераКолонки(Элемент.Имя));
	СтрокаТЧ[ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераСтроки(Элемент.Имя)] = ЭтотОбъект[Элемент.Имя];
	
	ФормыСервисныеРаботыКлиентСервер.ПересчитатьСумму(ЭтотОбъект, ПолучитьВидыВР());
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДекорацияPassedНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИмяЭлемента = Элемент.Имя;
	
	НомерСтроки = ФормыСервисныеРаботыКлиентСервер.НомерСтрокиИзИмениЭлемента(ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераКолонки(ИмяЭлемента));
	СтрокаТЧ = Объект.ВыполненныеРаботы[НомерСтроки - 1];
	
	СтатусТО = СтрокаТЧ[УзнатьВидТОПоИмениЭлемента(ИмяЭлемента) + "Статус"];
	
	ИзменитьСтатусТО(СтатусТО <> ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.Пройдено"), ИмяЭлемента);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводДатыТО(Дата, ДополнительныеПараметры) Экспорт
	
	Если Дата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТЧ = ФормыСервисныеРаботыКлиентСервер.СтрокаТЧВыполненныеРаботыПоИмениЭлемента(ЭтотОбъект, ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераКолонки(ДополнительныеПараметры.ИмяЭлемента));
	СтрокаТЧ[ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераСтроки(ДополнительныеПараметры.ИмяЭлемента)] = Дата;
	
	СтрокаТЧ[УзнатьВидТОПоИмениЭлемента(ДополнительныеПараметры.ИмяЭлемента) + "Статус"] =
		ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.Пройдено");
		
	ПривестиТаблицуРаботКАктуальномуПериоду();
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонВР);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьДобавлениеРаботы(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаРабот = Объект.ВыполненныеРаботы.Добавить();
	СтрокаРабот.РегламентнаяРабота = РезультатЗакрытия;
	СтрокаРабот[ДиапазонВР + "Статус"] = ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.Пройдено");
	СтрокаРабот[ДиапазонВР + "Период"] = ДатаПоДиапазонуВР(ДиапазонВР, Объект.Дата);
	
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонВР);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьУдалениеРаботы(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеРаботы = Объект.ВыполненныеРаботы.НайтиСтроки(
		Новый Структура("РегламентнаяРабота", РезультатЗакрытия.Значение));
		
	Если НайденныеРаботы.Количество() > 0 Тогда
		ИндексРаботы = Объект.ВыполненныеРаботы.Индекс(НайденныеРаботы[0]);
		Объект.ВыполненныеРаботы.Удалить(ИндексРаботы);
		// TODO Нужно правильно вычислять индексы строки и колонки
		//ЭтотОбъект.Элементы[ДиапазонВР + ИмяГруппыСтрокиТаблицы() + Строка(ИндексРаботы + 1) + Строка(ИндексРаботы + 2)].Видимость = Ложь;
	КонецЕсли;
	
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонВР);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатусТО(ТОПройдено, ИмяЭлемента)
	
	НомерСтроки = ФормыСервисныеРаботыКлиентСервер.НомерСтрокиИзИмениЭлемента(ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераКолонки(ИмяЭлемента));
	СтрокаТЧ = Объект.ВыполненныеРаботы[НомерСтроки - 1];
	
	Если ТОПройдено Тогда
		СтрокаТЧ[УзнатьВидТОПоИмениЭлемента(ИмяЭлемента) + "Статус"] =
			ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.Пройдено"); 
	Иначе
		СтрокаТЧ[УзнатьВидТОПоИмениЭлемента(ИмяЭлемента) + "Статус"] = 
			ПредопределенноеЗначение("Перечисление.СтатусыВыполненияТО.НеПройдено");
	КонецЕсли;
	
	ОбновитьЭлементыПланаТО();
	ОтфильтроватьРегламентныеРаботы(ДиапазонВР);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТумблераТО

&НаСервере
Процедура ОбновитьТумблерДиапазонаТО()
	
	НомераТО = Новый Массив;
	ВидыТО = ПолучитьВидыВР();
	
	Элементы.ДиапазонВР.СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(Объект.Автомобиль) Тогда
		Возврат;
	КонецЕсли;

	РеквизитыАвто = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Автомобиль, "ИзмерительТО,ДатаПриобретения,МежсервисныйИнтервал");

	Для каждого ВидТО Из ВидыТО Цикл
		ЭлСписка = Элементы.ДиапазонВР.СписокВыбора.Добавить(ВидТО, Строка(ВидТО));
		
		Если РеквизитыАвто.ИзмерительТО = Справочники.Автомобили.ИзмерительТО_ВРЕМЯ() Тогда
			ДатаПоИнтервалу = Документы.ВнеплановыеРаботы.ДатаТОПоИнтервалу(РеквизитыАвто.ДатаПриобретения, ВидТО, Объект.Дата);
		ИначеЕсли РеквизитыАвто.ИзмерительТО = Справочники.Автомобили.ИзмерительТО_ПРОБЕГ() Тогда
			ДатаПоИнтервалу =  Документы.ВнеплановыеРаботы.ПробегТОПоИнтервалу(ВидТО, Объект.ТекущийНомерТО,
				РеквизитыАвто.МежсервисныйИнтервал, Объект.Пробег);
		Иначе
			ВызватьИсключение "Not implemented!";
		КонецЕсли;

		Если ВидТО = ИмяПрошлогоВР() Тогда
			ЭлСписка.Представление = СтрШаблон("№%1 %2", Объект.ТекущийНомерТО - 1, Формат(ДатаПоИнтервалу, "ЧРГ=' '; ЧН=0; ДФ=yyyy"));
		ИначеЕсли ВидТО = ИмяТекущееВР() Тогда
			ЭлСписка.Представление = СтрШаблон("№%1 %2", Объект.ТекущийНомерТО, Формат(ДатаПоИнтервалу, "ЧРГ=' '; ЧН=0; ДФ=yyyy"));
		ИначеЕсли ВидТО = ИмяСледующееВР() Тогда
			ЭлСписка.Представление = СтрШаблон("№%1 %2", Объект.ТекущийНомерТО + 1, Формат(ДатаПоИнтервалу, "ЧРГ=' '; ЧН=0; ДФ=yyyy"));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДиапазонВРПриИзменении(Элемент)
	
	ОтфильтроватьРегламентныеРаботы(ДиапазонВР);
	
КонецПроцедуры

&НаСервере
Процедура ОтфильтроватьРегламентныеРаботы(знач ВидТОТекущий)
	
	ВидыТО = ПолучитьВидыВР();
	
	Для Счетчик1 = 1 По Объект.ВыполненныеРаботы.Количество() Цикл
		Для Счетчик2 = 1 По ВидыТО.Количество() Цикл
			ЭтотОбъект.Элементы[ВидыТО[Счетчик2 - 1] + ИмяГруппыСтрокиТаблицы() + Строка(Счетчик1) + Строка(Счетчик2)].Видимость = Ложь;
		КонецЦикла;
	КонецЦикла;
	
	Счетчик1 = 1;
	Для каждого СтрокаРеглРаботы Из Объект.ВыполненныеРаботы Цикл
		Счетчик2 = 1;
		Для каждого ВидТО Из ВидыТО Цикл
			ГруппаСтрокиТаблицы = ЭтотОбъект.Элементы[ВидТО + ИмяГруппыСтрокиТаблицы() + Строка(Счетчик1) + Строка(Счетчик2)];
			Если Документы.ВнеплановыеРаботы.ТОВходитВИнтервал(Объект.Дата, ВидТОТекущий, СтрокаРеглРаботы[ВидТО + "Период"])
				И СтрНачинаетсяС(ГруппаСтрокиТаблицы.Имя, ВидТОТекущий) Тогда
				
				ГруппаСтрокиТаблицы.Видимость = Истина;
			КонецЕсли;
			Счетчик2 = Счетчик2 + 1;
		КонецЦикла;
		Счетчик1 = Счетчик1 + 1;
	КонецЦикла;
	
	Элементы.ДобавитьРаботу.Видимость = (ВидТОТекущий = ИмяТекущееВР());
	Элементы.ДобавитьРаботу.Доступность = ЗначениеЗаполнено(Объект.Автомобиль);
	
	ФормыСервисныеРаботыКлиентСервер.ОтфильтроватьСуммуИтого(ЭтотОбъект, ВидыТО, ВидТОТекущий);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФото

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	РаботаСФотоФормыКлиент.НачатьСозданиеНовогоФото(ЭтотОбъект, Неопределено, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НачатьЗагрузкуФото() Экспорт
	
	ЗагрузитьФотоПроекта();
	
	Элементы.ДекорацияЗагрузкаКартинки.Видимость = Не ФотоЗагружены;
	Элементы.ДекорацияЗагрузкаТекст.Видимость = Не ФотоЗагружены;
	Элементы.ДекорацияПустоеФото.Видимость = ФотоЗагружены;
	
	ОбновитьИнтерфейс();
	ЭтотОбъект.Активизировать();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СсылкаНаПредставлениеДанныхНажатие(Элемент, СтандартнаяОбработка) Экспорт
	РаботаСФотоФормыКлиент.Подключаемый_СсылкаНаПредставлениеДанныхНажатие(
		ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Функция РеквизитФормыДляФотоКлиент() Экспорт
	Возврат РеквизитФормыДляФотоСервер();
КонецФункции

&НаСервере
Функция РеквизитФормыДляФотоСервер()
	Возврат РаботаСФотоФормыСервер.РеквизитФормыДляФото(ЭтотОбъект);
КонецФункции

&НаКлиенте
Процедура СтраницыОперацийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	РаботаСФотоФормыКлиент.ПриСменеСтраницыСФото(ЭтотОбъект, ТекущаяСтраница);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьФотоПроекта()
	РаботаСФотоФормыСервер.ЗагрузитьФотоПроекта(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура АвтомобильПриИзмененииСервер()
	
	ФормыСервисныеРаботыСервер.ЗаполнитьПробегЕслиНовыйДокумент(ЭтотОбъект);
	Объект.ТекущийНомерТО = ТекущийНомерТО(Объект.Автомобиль, Объект.Дата, Объект.Пробег);
	ЗагрузитьТаблицуСПланомТО();
	
КонецПроцедуры

&НаСервере
Процедура ПривестиТаблицуРаботКАктуальномуПериоду()
	
	Объект.ВыполненныеРаботы.Загрузить(Документы.ВнеплановыеРаботы.ПривестиТаблицуРаботКАктуальномуПериоду(
		Объект.ВыполненныеРаботы.Выгрузить(), Объект.Дата))
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДатаПоДиапазонуВР(ВидТО, ДатаОбъекта)
	
	Если ВидТО = ИмяТекущееВР() Тогда
		Возврат ДатаОбъекта;
	ИначеЕсли ВидТО = ИмяСледующееВР() Тогда
		НачалоСледующийГод = КонецГода(ДатаОбъекта) + 1;
		Возврат НачалоСледующийГод;
	ИначеЕсли ВидТО = ИмяПрошлогоВР() Тогда
		КонецПрошлыйГод = НачалоГода(ДатаОбъекта) - 1;
		Возврат КонецПрошлыйГод;
	КонецЕсли;
	
	ВызватьИсключение "Not implemented";
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	//TODO: УСЛОВНОЕ ОФОРМДЕНИЕ НЕ РАБОТАЕТ ПО НЕПОНЯТНЫМ ПРИЧИНАМ
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Счетчик1 = 1;
	Для каждого СтрокаРегРаботы Из Объект.ВыполненныеРаботы Цикл
		Счетчик2 = 1;
		Для каждого ВидТО Из ПолучитьВидыВР() Цикл
	
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы[ВидТО + ИмяВыполненннойРаботы() + Строка(Счетчик1) + Строка(Счетчик2)].Имя);

			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ВыполненныеРаботы." + ВидТО  + "Статус");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
			ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыВыполненияТО.Пройдено;
			
			Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);
			
			Счетчик2 = Счетчик2 + 1;

		КонецЦикла;
		Счетчик1 = Счетчик1 + 1;
	КонецЦикла;
	//
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекущийНомерТО(знач Автомобиль, знач ДатаАнализа, знач Пробег)
	Возврат ФормыСервисныеРаботыСервер.ТекущийНомерТО(Автомобиль, ДатаАнализа, Пробег);
КонецФункции

&НаСервереБезКонтекста
Функция ТаблицаПланТО(знач Автомобиль, знач ДатаАнализа)
	Возврат Документы.ВнеплановыеРаботы.ТаблицаВнеплановыхТО(ДатаАнализа, Автомобиль);
КонецФункции

&НаКлиенте
Функция ДатаТОПоИмениЭлемента(ИмяЭлемента)
	СтрокаТаблицы = ФормыСервисныеРаботыКлиентСервер.СтрокаТЧВыполненныеРаботыПоИмениЭлемента(ЭтотОбъект, ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераКолонки(ИмяЭлемента));
	РеквизитТЧ = СтрокаТаблицы[ФормыСервисныеРаботыКлиентСервер.ИмяЭлементаБезНомераСтроки(ИмяЭлемента)];
	Возврат РеквизитТЧ;
КонецФункции

&НаСервереБезКонтекста
Функция УзнатьВидТОПоИмениЭлемента(ИмяЭлемента)
	Возврат Документы.ВнеплановыеРаботы.УзнатьВидТОПоИмениЭлемента(ИмяЭлемента);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидыВР()
	
	Возврат Документы.ВнеплановыеРаботы.ПолучитьВидыВР();
	
КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗагрузитьТаблицуСПланомТО();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзмерительТОПробег()
	Возврат Справочники.Автомобили.ИзмерительТО_ПРОБЕГ();
КонецФункции


&НаСервереБезКонтекста
Функция ИзмерительТОАвто(знач Автомобиль)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Автомобиль, "ИзмерительТО");
	
КонецФункции

#КонецОбласти