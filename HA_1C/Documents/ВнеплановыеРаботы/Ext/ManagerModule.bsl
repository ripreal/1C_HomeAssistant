
#Область СлужебныйПрограммныйИнтерфейс

Функция ОтчетныеПоказатели() Экспорт
	
	ПланТО = ТаблицаВнеплановыхТО(ТекущаяДата());
	
	ВидыТекущихТО = Новый Массив;
	ВидыТекущихТО.Добавить(ИмяПрошлогоВР());
	ВидыТекущихТО.Добавить(ИмяТекущееВР());
	
	НевыполненныеТО = 0;
	Для каждого СтрокаТО Из ПланТО Цикл
		Для каждого ВидТО Из ВидыТекущихТО Цикл
			Если Не ЗначениеЗаполнено(СтрокаТО[ВидТО + "ПоФакту"]) 
				И СтрокаТО[ВидТО + "Статус"] = Перечисления.СтатусыВыполненияТО.НеПройдено
				И СтрокаТО[ВидТО + "Номер"] > 0 Тогда
				НевыполненныеТО = НевыполненныеТО + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Показатели = Новый Соответствие;
	Показатели.Вставить(НСтр("ru = 'Невыполненные ТО:'; en = 'Not passed services:'"), НевыполненныеТО);
	
	Возврат Показатели;
	
КонецФункции

Функция ПолучитьВидыВР() Экспорт
	
	ВидыТО = Новый Массив;
	ВидыТО.Добавить(ИмяПрошлогоВР());
	ВидыТО.Добавить(ИмяТекущееВР());
	ВидыТО.Добавить(ИмяСледующееВР());
	
	Возврат ВидыТО;
	
КонецФункции

Функция ИмяПрошлогоВР() Экспорт
	
	Возврат "ПрошлоеВР";
	
КонецФункции

Функция ИмяТекущееВР() Экспорт
	
	Возврат "ТекущееВР";
	
КонецФункции

Функция ИмяСледующееВР() Экспорт
	
	Возврат "СледующееВР";
	
КонецФункции

Функция ТаблицаВнеплановыхТО(ДатаАнализа, Автомобиль = Неопределено) Экспорт
	
	Проверки.СвойствоЗаполнено(ДатаАнализа);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗарегистрированныеВР.Автомобиль КАК Автомобиль,
	|	ЗарегистрированныеВР.РегламентнаяРабота КАК РегламентнаяРабота,
	|	МАКСИМУМ(ЗарегистрированныеВРПред.Период) КАК ПериодПред,
	|	ЗарегистрированныеВР.Период КАК Период,
	|	МИНИМУМ(ЗарегистрированныеВРСлед.Период) КАК ПериодСлед
	|ПОМЕСТИТЬ ПериодыРабот
	|ИЗ
	|	РегистрСведений.ЗарегистрированныеВР КАК ЗарегистрированныеВР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗарегистрированныеВР КАК ЗарегистрированныеВРСлед
	|		ПО ЗарегистрированныеВР.РегламентнаяРабота = ЗарегистрированныеВРСлед.РегламентнаяРабота
	|			И ЗарегистрированныеВР.Автомобиль = ЗарегистрированныеВРСлед.Автомобиль
	|			И ЗарегистрированныеВР.Период < ЗарегистрированныеВРСлед.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗарегистрированныеВР КАК ЗарегистрированныеВРПред
	|		ПО ЗарегистрированныеВР.Автомобиль = ЗарегистрированныеВРПред.Автомобиль
	|			И ЗарегистрированныеВР.РегламентнаяРабота = ЗарегистрированныеВРПред.РегламентнаяРабота
	|			И ЗарегистрированныеВР.Период > ЗарегистрированныеВРПред.Период
	|ГДЕ
	|	(ЗарегистрированныеВР.Автомобиль = &Автомобиль
	|			ИЛИ &Автомобиль = НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарегистрированныеВР.Автомобиль,
	|	ЗарегистрированныеВР.РегламентнаяРабота,
	|	ЗарегистрированныеВР.Период,
	|	ЗарегистрированныеВРПред.РегламентнаяРабота,
	|	ЗарегистрированныеВРСлед.РегламентнаяРабота
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарегистрированныеВРСрезПоследних.Автомобиль КАК Автомобиль,
	|	ЗарегистрированныеВРСрезПоследних.РегламентнаяРабота КАК РегламентнаяРабота,
	|	ПериодыРабот.ПериодПред КАК ПрошлоеВРПериод,
	|	ЗарегистрированныеВРСрезПоследних.Период КАК ТекущееВРПериод,
	|	ПериодыРабот.ПериодСлед КАК СледующееВРПериод,
	|	ЗарегистрированныеВРСрезПоследних.Сумма КАК ТекущееВРСумма,
	|	ЗарегистрированныеВРСрезПоследних.Идентификатор КАК ТекущееВРИдентификатор
	|ПОМЕСТИТЬ ПоследниеВнеплановыеВР
	|ИЗ
	|	ПериодыРабот КАК ПериодыРабот
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗарегистрированныеВР.СрезПоследних(
	|				&ДатаАнализа,
	|				Автомобиль = &Автомобиль
	|					ИЛИ &Автомобиль = НЕОПРЕДЕЛЕНО) КАК ЗарегистрированныеВРСрезПоследних
	|		ПО (ЗарегистрированныеВРСрезПоследних.Период = ПериодыРабот.Период)
	|			И (ЗарегистрированныеВРСрезПоследних.Автомобиль = ПериодыРабот.Автомобиль)
	|			И (ЗарегистрированныеВРСрезПоследних.РегламентнаяРабота = ПериодыРабот.РегламентнаяРабота)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследниеВнеплановыеВР.Автомобиль КАК Автомобиль,
	|	ПоследниеВнеплановыеВР.РегламентнаяРабота КАК РегламентнаяРабота,
	|	ЕСТЬNULL(ПоследниеВнеплановыеВР.ПрошлоеВРПериод, ДАТАВРЕМЯ(1, 1, 1)) КАК ПрошлоеВРПериод,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыВыполненияТО.Пройдено) КАК ПрошлоеВРСтатус,
	|	ЕСТЬNULL(ПоследниеВнеплановыеВР.ТекущееВРПериод, ДАТАВРЕМЯ(1, 1, 1)) КАК ТекущееВРПериод,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыВыполненияТО.Пройдено) КАК ТекущееВРСтатус,
	|	ЕСТЬNULL(ПоследниеВнеплановыеВР.СледующееВРПериод, ДАТАВРЕМЯ(1, 1, 1)) КАК СледующееВРПериод,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыВыполненияТО.Пройдено) КАК СледующееВРСтатус,
	|	ЕСТЬNULL(ЗарегистрированныеВРПред.Сумма, 0) КАК ПрошлоеВРСумма,
	|	ЕСТЬNULL(ЗарегистрированныеВРСлед.Сумма, 0) КАК СледующееВРСумма,
	|	ЕСТЬNULL(ПоследниеВнеплановыеВР.ТекущееВРСумма, 0) КАК ТекущееВРСумма,
	|	ЕСТЬNULL(ЗарегистрированныеВРПред.Идентификатор, &ПустойИдентификатор) КАК ПрошлоеВРИдентификатор,
	|	ЕСТЬNULL(ЗарегистрированныеВРСлед.Идентификатор, &ПустойИдентификатор) КАК СледующееВРИдентификатор,
	|	ЕСТЬNULL(ПоследниеВнеплановыеВР.ТекущееВРИдентификатор, &ПустойИдентификатор) КАК ТекущееВРИдентификатор
	|ИЗ
	|	ПоследниеВнеплановыеВР КАК ПоследниеВнеплановыеВР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗарегистрированныеВР КАК ЗарегистрированныеВРСлед
	|		ПО ПоследниеВнеплановыеВР.Автомобиль = ЗарегистрированныеВРСлед.Автомобиль
	|			И ПоследниеВнеплановыеВР.РегламентнаяРабота = ЗарегистрированныеВРСлед.РегламентнаяРабота
	|			И ПоследниеВнеплановыеВР.СледующееВРПериод = ЗарегистрированныеВРСлед.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗарегистрированныеВР КАК ЗарегистрированныеВРПред
	|		ПО ПоследниеВнеплановыеВР.Автомобиль = ЗарегистрированныеВРПред.Автомобиль
	|			И ПоследниеВнеплановыеВР.РегламентнаяРабота = ЗарегистрированныеВРПред.РегламентнаяРабота
	|			И ПоследниеВнеплановыеВР.ПрошлоеВРПериод = ЗарегистрированныеВРПред.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Автомобиль,
	|	РегламентнаяРабота");
	Запрос.УстановитьПараметр("Автомобиль", Автомобиль);
	Запрос.УстановитьПараметр("ПустойИдентификатор", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Запрос.УстановитьПараметр("ДатаАнализа", ДобавитьМесяц(ДатаАнализа, 12));
	
	Возврат ПривестиТаблицуРаботКАктуальномуПериоду(Запрос.Выполнить().Выгрузить(), ДатаАнализа);
	
КонецФункции

Функция ПривестиТаблицуРаботКАктуальномуПериоду(ВыполненныеРаботы, ДатаАнализа) Экспорт
	
	ВидыВР = ПолучитьВидыВР();
	
	РеквизитыАктуализации = Новый Массив;
	Для каждого РеквизитТЧ Из Метаданные.Документы.ВнеплановыеРаботы.ТабличныеЧасти.ВыполненныеРаботы.Реквизиты Цикл
		НайденныйВидВР = УзнатьВидТОПоИмениЭлемента(РеквизитТЧ.Имя);
		Если НайденныйВидВР <> Неопределено Тогда
			СокрИмяРеквизита = СтрЗаменить(РеквизитТЧ.Имя, НайденныйВидВР, "");
			Если РеквизитыАктуализации.Найти(СокрИмяРеквизита) = Неопределено Тогда
				РеквизитыАктуализации.Добавить(СокрИмяРеквизита);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВыполненныеРаботыПриведенная = ВыполненныеРаботы.Скопировать();
	Для Счетчик = 0 По ВыполненныеРаботы.Количество() - 1 Цикл
		Для каждого ВидВР Из ВидыВР Цикл
			ПеренестиЗначенияРеквизитов(РеквизитыАктуализации, ВыполненныеРаботы[Счетчик], ВидВР, ДатаАнализа, ВыполненныеРаботыПриведенная, Счетчик)
		КонецЦикла;
	КонецЦикла;
	
	ВсеРеквизитыТЧ = Новый Массив;
	Для каждого РеквизитТЧ Из Метаданные.Документы.ВнеплановыеРаботы.ТабличныеЧасти.ВыполненныеРаботы.Реквизиты Цикл
		ВсеРеквизитыТЧ.Добавить(РеквизитТЧ.Имя);
	КонецЦикла;
	
	ВыполненныеРаботыПриведенная.Свернуть(СтрСоединить(ВсеРеквизитыТЧ, ","));
	
	Возврат ВыполненныеРаботыПриведенная;
	
КонецФункции

Функция ДатаТОПоИнтервалу(ДатаПриобретения, ВидТО, ДатаДокумента) Экспорт
	
	ДатаАнализа = Дата(Год(ДатаДокумента), Месяц(ДатаПриобретения), День(ДатаПриобретения));
	
	Если ВидТО = ИмяТекущееВР() Тогда
		Если ДатаДокумента > ДатаАнализа Тогда
			Возврат ДатаАнализа;
		Иначе
			Возврат НачалоГода(ДатаАнализа) - 1
		КонецЕсли;
	ИначеЕсли ВидТО = ИмяСледующееВР() Тогда
		СледующийГодДатаАнализа = ДобавитьМесяц(ДатаАнализа, 12);
		СледующийГодДатаДокумента = ДобавитьМесяц(ДатаДокумента, 12);
		Если СледующийГодДатаДокумента > СледующийГодДатаАнализа Тогда
			Возврат СледующийГодДатаАнализа;
		Иначе
			Возврат НачалоГода(СледующийГодДатаАнализа) - 1;
		КонецЕсли;
	ИначеЕсли ВидТО = ИмяПрошлогоВР() Тогда
		КонецПрошлыйГодДатаАнализа = ДобавитьМесяц(ДатаАнализа, -12);
		КонецПрошлыйГодДатаДокумента = ДобавитьМесяц(ДатаДокумента, -12);
		Если КонецПрошлыйГодДатаДокумента > КонецПрошлыйГодДатаАнализа Тогда
			Возврат КонецПрошлыйГодДатаАнализа;
		Иначе
			Возврат НачалоГода(КонецПрошлыйГодДатаАнализа) - 1;
		КонецЕсли;
	КонецЕсли;
	
	ВызватьИсключение "Not implemented";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПеренестиЗначенияРеквизитов(СписокРеквизитов, СтрокаРаботы, ВидВРСтроки, ДатаАнализа, ВыполненныеРаботыПриведенная, Счетчик)
	
	ВидыВР = ПолучитьВидыВР();
	
	Для каждого ВидВР Из ВидыВР Цикл
		Если ТОВходитВИнтервал(ДатаАнализа, ВидВР, СтрокаРаботы[ВидВРСтроки + "Период"]) Тогда
			Если ВидВР = ВидВРСтроки Тогда
					Продолжить;
			КонецЕсли;
			Для каждого РеквизитСписка Из СписокРеквизитов Цикл
				ВыполненныеРаботыПриведенная.Получить(Счетчик)[ВидВР + РеквизитСписка] = СтрокаРаботы[ВидВРСтроки + РеквизитСписка];
				ВыполненныеРаботыПриведенная.Получить(Счетчик)[ВидВРСтроки + РеквизитСписка] = 
					ОбщегоНазначения.НезаполненноеЗначение(ВыполненныеРаботыПриведенная.Получить(Счетчик)[ВидВРСтроки + РеквизитСписка]);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла
	
КонецПроцедуры

Функция ТОВходитВИнтервал(ДатаАнализа, ВидТО, ДатаТО) Экспорт
	
	Если ВидТО = ИмяТекущееВР() Тогда
		Возврат ДатаТО >= НачалоГода(ДатаАнализа) И ДатаТО <= КонецГода(ДатаАнализа);
	ИначеЕсли ВидТО = ИмяСледующееВР() Тогда
		НачалоСледующийГод = КонецГода(ДатаАнализа) + 1;
		Возврат ДатаТО >= НачалоСледующийГод И ДатаТО <= КонецГода(НачалоСледующийГод);
	ИначеЕсли ВидТО = ИмяПрошлогоВР() Тогда
		КонецПрошлыйГод = НачалоГода(ДатаАнализа) - 1;
		Возврат ДатаТО >= НачалоГода(КонецПрошлыйГод) И ДатаТО <= КонецПрошлыйГод;
	КонецЕсли;
	
	ВызватьИсключение "Not implemented";
	
КонецФункции

Функция УзнатьВидТОПоИмениЭлемента(ИмяЭлемента) Экспорт
	
	ВидыТО = ПолучитьВидыВР();
	
	Для каждого ВидТО Из ВидыТО Цикл
		Если СтрНачинаетсяС(ИмяЭлемента, ВидТО) Тогда
			Возврат ВидТО;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти